plugins {
    id 'java-gradle-plugin'
	id 'jvm-test-suite'
	id 'nokeebuild.publishing'
	id 'nokeebuild.signing'
	id 'nokeebuild.use-latest-java-lts-in-test-suites'
	id 'nokeebuild.use-junit-platform-in-test-suites'
}

group = 'dev.nokee'
version = '1.0-milestone-4'
description = 'Quality-of-life enhancements for Gradle core native plugins.'

repositories {
    mavenCentral()
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.named('javadoc', Javadoc) {
	options {
		windowTitle 'Nokee Companion'
		showFromPublic()

		addStringOption('Xdoclint:all,-missing')
	}
}

gradlePlugin {
    plugins {
        legacy {
            id = 'dev.nokee.native-companion'
            implementationClass = 'dev.nokee.legacy.LegacySupportPlugin'
        }
    }

	dependencies {
		implementation 'dev.nokee.commons:commons-names:latest.release'
		implementation 'dev.nokee.commons:commons-backports:latest.release'
		implementation 'commons-io:commons-io:latest.release'
	}
}

testing {
	suites {
		functionalTest(JvmTestSuite) {
			dependencies {
				implementation gradleTestKit()
				implementation 'commons-io:commons-io:latest.release'
				implementation 'dev.nokee.commons:test-gradle-projects:latest.release'
				implementation 'dev.nokee.templates:nokee-code-templates:latest.release'
				implementation 'dev.gradleplugins:gradle-runner-kit:latest.release'
				implementation 'org.jetbrains:annotations:26.0.2'
			}
		}
		samplesTest(JvmTestSuite) {
			targets.all {
				testTask.configure {
					samples.samples.all {
						systemProperty it.name, it.sampleDir.get().asFile.absolutePath
					}
				}
			}

			dependencies {
				implementation gradleTestKit()
				implementation 'commons-io:commons-io:latest.release'
				implementation 'dev.gradleplugins.exemplar:commons-exemplar:latest.release'
				implementation 'dev.nokee.commons:test-gradle-projects:latest.release'
				implementation libs.hamcrest.core
				implementation 'dev.gradleplugins:gradle-runner-kit:latest.release'
			}
		}
	}
}

gradlePlugin.testSourceSets.add(sourceSets.functionalTest)
gradlePlugin.testSourceSets.add(sourceSets.samplesTest)
