plugins {
    id 'java-gradle-plugin'
}

repositories {
    mavenCentral()
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

gradlePlugin {
    plugins {
        legacy {
            id = 'dev.nokee.native-companion'
            implementationClass = 'dev.nokee.legacy.LegacySupportPlugin'
        }
    }

	dependencies {
		implementation 'dev.nokee.commons:commons-names:latest.release'
		implementation 'dev.nokee.commons:commons-backports:latest.release'
		implementation 'dev.nokee.commons:commons-provider:latest.release'
		implementation 'commons-io:commons-io:latest.release'
	}
}

sourceSets {
    functionalTest {
    }
}

configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)
configurations.functionalTestRuntimeOnly.extendsFrom(configurations.testRuntimeOnly)

tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

gradlePlugin.testSourceSets.add(sourceSets.functionalTest)

tasks.named('check') {
    dependsOn(tasks.functionalTest)
}

tasks.named('test') {
    useJUnitPlatform()
}
